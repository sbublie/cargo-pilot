openapi: 3.0.3
info:
  title: Cargo Pilot Database Gateway
  version: 1.0.0
servers:
  - url: http://localhost:5001
paths:
  /locations:
    get:
      summary: Get all locations
      tags:
        - "Locations"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Location"
    post:
      summary: Add a new location
      tags:
        - "Locations"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Location"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Location"
  /locations/{id}:
    get:
      summary: Get a single location by ID
      tags:
        - "Locations"
      parameters:
        - name: id
          in: path
          description: Location ID
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Location"
        "404":
          description: Location not found
    put:
      summary: Modify a location by ID
      tags:
        - "Locations"
      parameters:
        - name: id
          in: path
          description: Location ID
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Location"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Location"
        "404":
          description: Location not found
    delete:
      summary: Delete a location by ID
      tags:
        - "Locations"
      parameters:
        - name: id
          in: path
          description: Location ID
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /clusters:
    get:
      summary: Get all clusters
      tags:
        - "Clusters"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Cluster"
    post:
      summary: Add a new cluster
      tags:
        - "Clusters"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Cluster"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Cluster"
  /clusters/{id}:
    get:
      summary: Get a single cluster by ID
      tags:
        - "Clusters"
      parameters:
        - name: id
          in: path
          description: Cluster ID
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Cluster"
        "404":
          description: Cluster not found
    put:
      summary: Modify a cluster by ID
      tags:
        - "Clusters"
      parameters:
        - name: id
          in: path
          description: Cluster ID
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Cluster"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Cluster"
        "404":
          description: Cluster not found
    delete:
      summary: Delete a cluster by ID
      tags:
        - "Clusters"
      parameters:
        - name: id
          in: path
          description: Cluster ID
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /trips:
    get:
      summary: Get all trips
      tags:
        - "Trips"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Trip"
    post:
      summary: Add a new trip
      tags:
        - "Trips"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Trip"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Trip"
  /trips/{id}:
    get:
      summary: Get a single trip by ID
      tags:
        - "Trips"
      parameters:
        - name: id
          in: path
          description: Trip ID
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Trip"
        "404":
          description: Trip not found
    put:
      summary: Modify a trip by ID
      tags:
        - "Trips"
      parameters:
        - name: id
          in: path
          description: Trip ID
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Trip"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Trip"
        "404":
          description: Trip not found
    delete:
      summary: Delete a trip by ID
      tags:
        - "Trips"
      parameters:
        - name: id
          in: path
          description: Trip ID
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /offerings:
    get:
      summary: Get all offerings
      tags:
        - "Offerings"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Offering"
    post:
      summary: Add a new offering
      tags:
        - "Offerings"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Offering"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Offering"
  /offerings/{id}:
    get:
      summary: Get a single offering by ID
      tags:
        - "Offerings"
      parameters:
        - name: id
          in: path
          description: Offering ID
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Offering"
        "404":
          description: Offering not found
    put:
      summary: Modify a offering by ID
      tags:
        - "Offerings"
      parameters:
        - name: id
          in: path
          description: Offering ID
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Offering"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Offering"
        "404":
          description: Offering not found
    delete:
      summary: Delete a offering by ID
      tags:
        - "Offerings"
      parameters:
        - name: id
          in: path
          description: Offering ID
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /trip-pattern:
    get:
      summary: Get all trip pattern
      tags:
        - "Trip Pattern"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TripPattern"
    post:
      summary: Add a new trip pattern
      tags:
        - "Trip Pattern"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TripPattern"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TripPattern"
  /trip-pattern/{id}:
    get:
      summary: Get a single trip pattern by ID
      tags:
        - "Trip Pattern"
      parameters:
        - name: id
          in: path
          description: Trip Pattern ID
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TripPattern"
        "404":
          description: Trip Pattern not found
    put:
      summary: Modify a trip pattern by ID
      tags:
        - "Trip Pattern"
      parameters:
        - name: id
          in: path
          description: Trip Pattern ID
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TripPattern"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TripPattern"
        "404":
          description: Trip Pattern not found
    delete:
      summary: Delete a trip pattern by ID
      tags:
        - "Trip Pattern"
      parameters:
        - name: id
          in: path
          description: Trip Pattern ID
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string


  /trip-patternes:
    get:
      summary: Get all trip patternes
      tags:
        - "Trip Matches"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TripMatch"
    post:
      summary: Add a new trip pattern
      tags:
        - "Trip Matches"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TripMatch"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TripMatch"
  /trip-patternes/{id}:
    get:
      summary: Get a single trip pattern by ID
      tags:
        - "Trip Matches"
      parameters:
        - name: id
          in: path
          description: Trip Match ID
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TripMatch"
        "404":
          description: Offering not found
    put:
      summary: Modify a trip pattern by ID
      tags:
        - "Trip Matches"
      parameters:
        - name: id
          in: path
          description: Trip Match ID
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TripMatch"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TripMatch"
        "404":
          description: Trip Match not found
    delete:
      summary: Delete a trip pattern by ID
      tags:
        - "Trip Matches"
      parameters:
        - name: id
          in: path
          description: Trip Match ID
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string


components:
  schemas:
    Location:
      type: object
      properties:
        lat:
          type: number
          format: float
          nullable: true
        long:
          type: number
          format: float
          nullable: true
        type:
          type: string
        timestamp:
          type: integer
          nullable: true
        id:
          type: integer
          format: int64
          readOnly: true
        zip_code:
          type: integer
          nullable: true
        city:
          type: string
          nullable: true
        street:
          type: string
          nullable: true
        country:
          type: string
          nullable: true

    Cluster:
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        center_lat:
          type: number
          format: float
          nullable: true
        center_long:
          type: number
          format: float
          nullable: true
        location_ids:
          type: array
          items:
            type: integer
          nullable: false

    Trip:
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        customer:
          type: string
          nullable: true
        destination_id:
          type: integer
        origin_id:
          type: integer
        source:
          type: string
        type:
          type: string
        vehicle:
          type: string
          nullable: true
        load_percentage:
          type: number
          format: float
          nullable: true
        load_meter:
          type: number
          format: float
          nullable: true
        load_weight:
          type: number
          format: float
          nullable: true

    Offering:
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        customer:
          type: string
          nullable: true
        destination_id:
          type: integer
        origin_id:
          type: integer
        source:
          type: string
        type:
          type: string
        vehicle:
          type: string
          nullable: true
        load_percentage:
          type: number
          format: float
          nullable: true
        load_meter:
          type: number
          format: float
          nullable: true
        load_weight:
          type: number
          format: float
          nullable: true

    TripPattern:
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        detectedPattern:
          type: string
        relatedTripIds:
          type: array
          items:
            type: integer
          nullable: false

    TripMatch:
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        relatedTripPatternId:
          type: integer
        relatedOfferings:
          type: array
          items:
            type: integer
          nullable: false
