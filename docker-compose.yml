version: "3.4"
services:
  cp-proxy:
    container_name: cp-proxy
    restart: always
    build: ./cp-proxy
    ports:
      - 80:80
      - 443:443
    environment:
      - ENABLE_HTTPS=false
  cp-control:
    container_name: cp-control
    restart: always
    build: ./cp-control
  cp-db:
    container_name: cp-db
    restart: always
    build: ./cp-db
  cp-db-ng:
    container_name: cp-db-ng
    restart: always
    build: ./cp-db-ng
    volumes:
      - ./cp-db-ng/logs:/app/logs
  cp-analyzer:
    container_name: cp-analyzer
    restart: always
    build: ./cp-analyzer
    volumes:
      - ./cp-analyzer/logs:/app/logs
  cp-postgres:
    container_name: cp-postgres
    image: postgres
    restart: always
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=pguser
      - POSTGRES_PASSWORD=pdb&3Xif
    volumes:
      - db:/var/lib/postgresql/data

  mongodb:
    container_name: mongodb
    restart: always
    image: mongodb/mongodb-community-server:latest
    environment:
      - MONGO_INITDB_ROOT_USERNAME=user
      - MONGO_INITDB_ROOT_PASSWORD=pass
    ports:
      - 27017:27017
    volumes:
      - db-ng:/data/db

volumes:
  db:
    driver: local
  db-ng:
    driver: local
